# Generated by Django 4.2.7 on 2025-07-04 12:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('schedules', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('CREATOR', 'Créateur'), ('MODERATOR', 'Modérateur'), ('MEMBER', 'Membre')], default='MEMBER', max_length=15)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('contribution_score', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('max_members', models.IntegerField(default=6)),
                ('status', models.CharField(choices=[('FORMING', 'En formation'), ('ACTIVE', 'Actif'), ('COMPLETED', 'Terminé'), ('CANCELLED', 'Annulé')], default='FORMING', max_length=15)),
                ('study_type', models.CharField(choices=[('EXAM_PREP', "Préparation d'examen"), ('HOMEWORK', 'Devoirs'), ('PROJECT', 'Projet'), ('GENERAL', 'Étude générale')], max_length=50)),
                ('meeting_frequency', models.CharField(choices=[('DAILY', 'Quotidien'), ('WEEKLY', 'Hebdomadaire'), ('BIWEEKLY', 'Bi-hebdomadaire'), ('MONTHLY', 'Mensuel')], max_length=20)),
                ('preferred_time', models.CharField(choices=[('MORNING', 'Matin'), ('AFTERNOON', 'Après-midi'), ('EVENING', 'Soir'), ('FLEXIBLE', 'Flexible')], max_length=20)),
                ('avg_compatibility_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedules.course')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='study_groups', through='matching.GroupMembership', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_group_size', models.IntegerField(default=4)),
                ('study_type', models.CharField(choices=[('EXAM_PREP', "Préparation d'examen"), ('HOMEWORK', 'Devoirs'), ('PROJECT', 'Projet'), ('GENERAL', 'Étude générale')], max_length=50)),
                ('availability', models.JSONField(default=dict)),
                ('preferences', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('PROCESSING', 'En cours'), ('COMPLETED', 'Terminé'), ('EXPIRED', 'Expiré')], default='PENDING', max_length=15)),
                ('compatibility_scores', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedules.course')),
                ('matched_groups', models.ManyToManyField(blank=True, to='matching.studygroup')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matching.studygroup'),
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StudentCompatibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compatibility_score', models.FloatField()),
                ('schedule_compatibility', models.FloatField(default=0.0)),
                ('academic_compatibility', models.FloatField(default=0.0)),
                ('personality_compatibility', models.FloatField(default=0.0)),
                ('preference_compatibility', models.FloatField(default=0.0)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedules.course')),
                ('student1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_as_student1', to=settings.AUTH_USER_MODEL)),
                ('student2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compatibility_as_student2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('student1', 'student2', 'course')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='groupmembership',
            unique_together={('student', 'group')},
        ),
    ]
